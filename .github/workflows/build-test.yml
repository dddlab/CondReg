name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        exclude:
          # Exclude some combinations to reduce CI time
          - os: windows-latest
            python-version: '3.7'
          - os: macos-latest
            python-version: '3.7'

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Platform-specific dependency installation
    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libeigen3-dev

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cmake eigen

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        # Install vcpkg and eigen3
        git clone https://github.com/Microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat
        .\vcpkg\vcpkg install eigen3:x64-windows
        echo "EIGEN_INCLUDE_DIR=${{ github.workspace }}\vcpkg\installed\x64-windows\include\eigen3" >> $env:GITHUB_ENV

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pybind11 pytest

    - name: Build C++ library
      run: |
        cd condreg-py-interface
        python build_cpp.py

    - name: Build Python package
      run: |
        cd condreg-py-interface
        pip install -e .

    - name: Test import
      run: |
        python -c "import condreg; print('Import successful')"

    - name: Run tests
      run: |
        cd condreg-py-interface
        python -m pytest tests/ -v

  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.2
      env:
        # Configure cibuildwheel
        CIBW_BUILD: cp37-* cp38-* cp39-* cp310-* cp311-*
        CIBW_SKIP: "*-win32 *-manylinux_i686"
        
        # Install dependencies before building
        CIBW_BEFORE_BUILD_LINUX: yum install -y eigen3-devel || apt-get update && apt-get install -y libeigen3-dev
        CIBW_BEFORE_BUILD_MACOS: brew install eigen
        CIBW_BEFORE_BUILD_WINDOWS: |
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg &&
          C:\vcpkg\bootstrap-vcpkg.bat &&
          C:\vcpkg\vcpkg install eigen3:x64-windows &&
          set EIGEN_INCLUDE_DIR=C:\vcpkg\installed\x64-windows\include\eigen3
        
        # Build the C++ library first
        CIBW_BEFORE_BUILD: python build_cpp.py

    - uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl 