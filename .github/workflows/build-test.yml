name: Build and Test
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          # Exclude some combinations to reduce CI time
          - os: windows-latest
            python-version: '3.8'
          - os: macos-latest
            python-version: '3.8'
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    # Platform-specific dependency installation
    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libeigen3-dev
    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cmake eigen
    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      timeout-minutes: 20
      run: |
        # Use chocolatey for faster installation
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        # Install vcpkg and eigen3 with shallow clone
        git clone --depth 1 https://github.com/Microsoft/vcpkg.git C:\vcpkg
        C:\vcpkg\bootstrap-vcpkg.bat
        C:\vcpkg\vcpkg install eigen3:x64-windows --triplet x64-windows
        echo "EIGEN_INCLUDE_DIR=C:\vcpkg\installed\x64-windows\include\eigen3" >> $env:GITHUB_ENV
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pybind11 pytest
    - name: Clean build directory
      run: |
        rm -rf condreg-cpp/build || true
    - name: Build C++ library
      timeout-minutes: 15
      run: |
        cd condreg-py-interface
        python build_cpp.py
    - name: Build Python package
      run: |
        cd condreg-py-interface
        pip install -e .
    - name: Test import
      run: |
        python -c "import condreg; print('Import successful')"
    - name: Run tests
      run: |
        cd condreg-py-interface
        python -m pytest tests/ -v
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.22.0
      timeout-minutes: 45
      with:
        package-dir: ./condreg-py-interface
        output-dir: wheelhouse
      env:
        # Configure cibuildwheel
        CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
        CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux*"
        
        # Reduce build time by limiting architectures
        CIBW_ARCHS_LINUX: x86_64
        CIBW_ARCHS_MACOS: x86_64 arm64
        CIBW_ARCHS_WINDOWS: AMD64
        
        # Install dependencies before building
        CIBW_BEFORE_BUILD_LINUX: |
          yum install -y eigen3-devel cmake3 || 
          (apt-get update && apt-get install -y libeigen3-dev cmake)
        
        CIBW_BEFORE_BUILD_MACOS: |
          brew install eigen cmake || echo "Dependencies may already be installed"
        
        CIBW_BEFORE_BUILD_WINDOWS: |
          git clone --depth 1 https://github.com/Microsoft/vcpkg.git C:\vcpkg &&
          C:\vcpkg\bootstrap-vcpkg.bat &&
          C:\vcpkg\vcpkg install eigen3:x64-windows --triplet x64-windows &&
          set EIGEN_INCLUDE_DIR=C:\vcpkg\installed\x64-windows\include\eigen3
        
        # Build the C++ library first - clean and build
        CIBW_BEFORE_BUILD: |
          rm -rf ../condreg-cpp/build || del /Q /S ..\condreg-cpp\build || true &&
          cd {package} &&
          python build_cpp.py
    - uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}
        path: ./wheelhouse/*.whl