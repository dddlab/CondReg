% Generated by roxygen2: do not edit by hand
\name{condreg}
\alias{condreg}
\title{Condition Number Regularized Covariance Estimation}
\usage{
condreg(data_in, kmax)
}
\arguments{
\item{data_in}{Input data matrix (n observations x p variables) or covariance matrix}

\item{kmax}{Condition number bound (scalar > 1)}
}
\value{
A list with components:
\item{S}{Regularized covariance matrix}
\item{invS}{Inverse of regularized covariance matrix (precision matrix)}
}
\description{
Compute a condition-number-regularized covariance matrix using the method
of Won et al. (2013). This function constrains the condition number of the
covariance matrix to be at most \code{kmax}, which improves numerical
stability and statistical efficiency.
}
\details{
The condition number regularization method shrinks the eigenvalues of the
sample covariance matrix to ensure the condition number does not exceed
the specified bound. This is particularly useful in high-dimensional
settings where the sample covariance matrix may be ill-conditioned.
}
\examples{
## Generate example data
set.seed(123)
X <- matrix(rnorm(100*5), 100, 5)

## Regularize with condition number bound of 10
result <- condreg(X, 10)

## Examine resulting matrices
cov_matrix <- result$S
precision_matrix <- result$invS

## Check condition number
eigenvals <- eigen(cov_matrix, only.values=TRUE)$values
condition_number <- max(eigenvals)/min(eigenvals)
print(condition_number)  # Should be <= 10

## Example with true covariance matrix
sigma <- diag(5)
sigma[3,2] <- sigma[2,3] <- 0.8

\dontrun{
library(MASS)
X <- mvrnorm(200, rep(0,5), sigma)

## Covariance estimation
crcov <- condreg(X, 3)

## Inspect output
str(crcov)              ## returned object
sigma.hat <- crcov$S    ## estimate of sigma matrix
omega.hat <- crcov$invS ## estimate of inverse of sigma matrix
}
}
\references{
Won, J.-H., Lim, J., Kim, S.-J., and Rajaratnam, B. (2013).
Condition-number-regularized covariance estimation.
Journal of the Royal Statistical Society: Series B, 75(3), 427-450.
}
\seealso{
\code{\link{select_condreg}} for automatic penalty selection via cross-validation,
\code{\link{kgrid}} for generating penalty grids
}

